@model ShippingTrackingSystem.ViewModels.BuyProductsViewModel

@{
    ViewData["Title"] = "Buy Products";
    int index = 0;
}

<style>
    .product-image {
        width: 100px;
        height: 100px;
        object-fit: cover;
    }

    .table {
        width: 100%;
        margin-bottom: 1rem;
        color: #212529;
    }

    .table th {
        vertical-align: bottom;
        border-bottom: 2px solid #dee2e6;
    }

    .table td {
        vertical-align: top;
        border-top: 1px solid #dee2e6;
    }

    .quantity-input {
        width: 80px;
    }

    .form-section {
        margin-top: 20px;
        padding: 15px;
        border: 1px solid #dee2e6;
        border-radius: 5px;
        background-color: #f8f9fa;
    }

    .submit-btn {
        margin-top: 15px;
    }
</style>

<div class="container">
    <h2 class="text-center mt-4 mb-4">Buy Products from Category @Model.CategoryName</h2>

    <div class="form-section">
        <form asp-action="BuyProducts">
            <div asp-validation-summary="All" class="text-danger"></div>
            <input type="hidden" asp-for="CategoryId" />

            <table class="table">
                <thead>
                    <tr>
                        <th>Product</th>
                        <th>Price</th>
                        <th>Available</th>
                        <th>Quantity</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var product in Model.Products)
                    {
                        <tr>
                            <td>
                                <img src="@product.ImagePath" alt="@product.ProductName" class="product-image" />
                                @product.ProductName
                            </td>
                            <td>@product.Price</td>
                            <td>@product.AvailableQuantity</td>
                            <td>
                                <input type="hidden" name="Products[@index].ProductId" value="@product.ProductId" />
                                <input type="number" name="Products[@index].PurchaseQuantity" class="quantity-input" min="1" max="@product.AvailableQuantity" />
                            </td>
                        </tr>
                        index++;
                    }
                </tbody>
            </table>

            <button type="submit" class="btn btn-primary submit-btn">Place Order</button>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.querySelector('form');
            form.addEventListener('submit', function (event) {
                event.preventDefault();

                let isAtLeastOneSelected = false;
                let isQuantityValid = true;

                document.querySelectorAll('.quantity-input').forEach(input => {
                    const maxQuantity = parseInt(input.max);
                    const selectedQuantity = parseInt(input.value);

                    if (selectedQuantity > 0 && selectedQuantity <= maxQuantity) {
                        isAtLeastOneSelected = true;
                        input.style.border = '';
                    } else {
                        if (selectedQuantity > maxQuantity || selectedQuantity < 0) {
                            input.style.border = '2px solid red';
                            isQuantityValid = false;
                        } else {
                            input.style.border = '';
                        }
                    }
                });

                if (!isAtLeastOneSelected) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Please select at least one item.'
                    });
                } else if (!isQuantityValid) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Invalid quantity selected for some items.'
                    });
                } else {
                    form.submit();
                }
            });
        });

        @if (!ViewData.ModelState.IsValid)
        {
            <text>
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Please correct the errors and try again.'
                });
            </text>
        }
    </script>
}
